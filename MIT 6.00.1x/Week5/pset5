Note pset5 was solely q/a style. My chosen answer is followed by a dash with it's correctness after it. There where 6 sections of problems. I provided the correct response to all problems

----------
    1
----------

Problem 1-1
----------
The ONLY thing we are interested in when designing programs is that it returns the correct answer.

True
False - correct


Problem 1-2
----------
Roughly speaking, under the RAM model of computation, adding two numbers takes the same amount of time as dividing them.

True - correct
False


Problem 1-3
----------
When determining asymptotic complexity, we discard all terms except for the one with the largest growth rate.

 True - correct
 False


Problem 1-4
----------
Bisection search is an example of linear time complexity

True
False - correct


Problem 1-5
-----------
For large values of n, an algorithm that takes 20000n^2 steps has better time complexity (takes less time) than one that takes 0.001n^5 steps

True - correct
False

----------
    2
----------

Problem 2-1
-----------
Indirection, as talked about in lecture, means you have to traverse the list more than once.

True
False - correct

Problem 2-2
-----------
The complexity of binary search on a sorted list of n items is O(log‚Å°n).

True - correct
False

Problem 2-3
-----------
The worst case time complexity for selection sort is O(n2).

True - correct
False

Problem 2-4
-----------
The base case for the recursive version of merge sort from lecture is checking ONLY for the list being empty.

True
False - correct

Problem 2-5
-----------
An ideal hash function maps all the input keys to the same output.

True
False - correct

----------
    3
----------

Problem 3-1
-----------
0.0000001n + 1000000

O(n) - correct

Problem 3-2
-----------
0.0001n^2 + 20000n - 90000

O(n^c) - correct

Problem 3-3
-----------
20n + 900log(n) + 100000

O(n) - correct

Problem 3-4
-----------
(log (n))^2 + 5n^7

O(n^c) - correct

Problem 3-5
-----------
n^200 - 2 n^3O

O(n^c) - correct

Problem 3-6
-----------
30n^2+nlog(n)

O(n^c) - correct

Problem 3-7
-----------
nlog (n) - 3000n
O(n log(n)) - correct

Problem 3-8
-----------
3
O(1) - correct

Problem 3-9
-----------
5^n + n^5 + n + 5
O(c^n) - correct

Problem 3-10
-----------
nlog(n) + n^2 + n + log(n) + 1 + 2^n
O(c^n) - correct

----------
    4
----------

Problem 4-1
-----------
O(1) - correct

Problem 4-2
-----------
O(len(n)) - correct

Problem 4-3
-----------
O(log(n)) - correct

Problem 4-4
-----------
O(n) - correct

Problem 4-5
-----------
O(n^2) - correct

----------
    5
----------

Problem 5-1
-----------
search and newsearch return the same answers for lists L of length 0, 1, or 2.

----------
    6
----------

Problem 6-1
-----------
Increasing - correct

Problem 6-2
-----------
O(n^2) - correct

Problem 6-3
-----------
modSwapSort now orders the list in descending order for all lists - correct

Problem 6-4
-----------
Best and worst cases stay the same - correct
